/**
 * SCILL API
 * SCILL gives you the tools to activate, retain and grow your user base in your app or game by bringing you features well known in the gaming industry: Gamification. We take care of the services and technology involved so you can focus on your game and content.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@scillgame.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "CoreMinimal.h"
#include "ScillApiWrapper/ScillApiBaseModel.h"

namespace ScillSDK 
{

class SCILLSDK_API ScillApiEventsApi
{
public:
	ScillApiEventsApi();
	~ScillApiEventsApi();

	void SetURL(const FString& Url);
	void AddHeaderParam(const FString& Key, const FString& Value);
	void ClearHeaderParams();

	class GetAvailableEventsRequest;
	class GetAvailableEventsResponse;
	class SendEventRequest;
	class SendEventResponse;
	
    DECLARE_DELEGATE_OneParam(FGetAvailableEventsDelegate, const GetAvailableEventsResponse&);
    DECLARE_DELEGATE_OneParam(FSendEventDelegate, const SendEventResponse&);
    
    bool GetAvailableEvents(const GetAvailableEventsRequest& Request, const FGetAvailableEventsDelegate& Delegate = FGetAvailableEventsDelegate()) const;
    bool SendEvent(const SendEventRequest& Request, const FSendEventDelegate& Delegate = FSendEventDelegate()) const;
    
private:
    void OnGetAvailableEventsResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FGetAvailableEventsDelegate Delegate) const;
    void OnSendEventResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FSendEventDelegate Delegate) const;
    
	bool IsValid() const;
	void HandleResponse(FHttpResponsePtr HttpResponse, bool bSucceeded, Response& InOutResponse) const;

	FString Url;
	TMap<FString,FString> AdditionalHeaderParams;
};
	
}
